Proving methods in TestAA
Starting proof of TestAA.TestAA() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of TestAA.TestAA() with prover !!!! - no warnings
Starting proof of TestAA.m((@org.jmlspecs.annotation.NonNull :: java.lang.Integer),int,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of TestAA.m((@org.jmlspecs.annotation.NonNull :: java.lang.Integer),int,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!! - no warnings
Completed proving methods in TestAA
Proving methods in TestB
Starting proof of TestB.TestB() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of TestB.TestB() with prover !!!! - no warnings
Starting proof of TestB.m((@org.jmlspecs.annotation.NonNull :: java.lang.Integer),int,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of TestB.m((@org.jmlspecs.annotation.NonNull :: java.lang.Integer),int,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!! - no warnings
Completed proving methods in TestB
Proving methods in TestC
Completed proving methods in TestC
Proving methods in TestA
Starting proof of TestA.TestA() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of TestA.TestA() with prover !!!! - no warnings
Starting proof of TestA.m1(TestAA,(@org.jmlspecs.annotation.Nullable :: java.lang.Integer)) with prover !!!!
test/preconditionDetail/TestA.java:22: warning: The prover cannot establish an assertion (Precondition) in method m1
        a.m(k,100,100);
           ^
test/preconditionDetail/TestA.java:11: warning: Associated declaration
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r) {
                ^
test/preconditionDetail/TestC.java:11: warning: Precondition conjunct is false: p != null
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r);
                       ^
test/preconditionDetail/TestB.java:5: warning: Precondition conjunct is false: p != null
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r) {
                       ^
test/preconditionDetail/TestA.java:11: warning: Precondition conjunct is false: p != null
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r) {
                       ^
test/preconditionDetail/TestA.java:9: warning: Precondition conjunct is false: p >= 15
    //@   requires p >= 15;
                     ^
Completed proof of TestA.m1(TestAA,(@org.jmlspecs.annotation.Nullable :: java.lang.Integer)) with prover !!!! - with warnings
Starting proof of TestA.m2(TestAA,(@org.jmlspecs.annotation.Nullable :: java.lang.Integer)) with prover !!!!
test/preconditionDetail/TestA.java:27: warning: The prover cannot establish an assertion (Precondition) in method m2
        a.m(100,100,kk);
           ^
test/preconditionDetail/TestA.java:11: warning: Associated declaration
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r) {
                ^
test/preconditionDetail/TestC.java:11: warning: Precondition conjunct is false: r != null
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r);
                                                         ^
test/preconditionDetail/TestC.java:8: warning: Precondition conjunct is false: r >= 15
    //@   requires r >= 15;
                     ^
test/preconditionDetail/TestB.java:5: warning: Precondition conjunct is false: r != null
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r) {
                                                         ^
test/preconditionDetail/TestA.java:11: warning: Precondition conjunct is false: r != null
    public void m( /*@ non_null */Integer p, int q,  /*@ non_null */Integer r) {
                                                         ^
Completed proof of TestA.m2(TestAA,(@org.jmlspecs.annotation.Nullable :: java.lang.Integer)) with prover !!!! - with warnings
Starting proof of TestA.m3(TestAA,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of TestA.m3(TestAA,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!! - no warnings
Starting proof of TestA.m4(TestAA,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of TestA.m4(TestAA,(@org.jmlspecs.annotation.NonNull :: java.lang.Integer)) with prover !!!! - no warnings
Completed proving methods in TestA
12 warnings
