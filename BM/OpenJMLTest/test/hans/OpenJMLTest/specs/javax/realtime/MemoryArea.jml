package javax.realtime;

@javax.safetycritical.annotate.SCJAllowed(javax.safetycritical.annotate.Level.INFRASTRUCTURE)
public abstract class MemoryArea extends Object {
  
  /*@ 
    public behaviour
      requires true;
      assignable \nothing;
      ensures \result >= 0;
    @*/
  @javax.safetycritical.annotate.SCJAllowed
  public long memoryConsumed(); 
  
  /*@ 
    public behaviour
      requires true;
      assignable \nothing;
      ensures \result == size() - memoryConsumed();
    @*/
  @javax.safetycritical.annotate.SCJAllowed
  public long memoryRemaining(); 
  
  /*@ 
    public behaviour
      requires true;
      assignable \nothing;
      ensures \result >= 0;
    @*/
  @javax.safetycritical.annotate.SCJAllowed
  public long size();  

  // public static int getRemainingMemorySize(); 

  // public int getRemainingBackingstoreSize();  
  
  
  /*@  
     public behavior    
       requires object != null;  
       ensures  \result != null;  // is tested elsewhere, see javax.realtime.test.TestMemoryArea
    @*/
  @javax.safetycritical.annotate.SCJAllowed
  public static MemoryArea getMemoryArea(Object object); 
  
}
